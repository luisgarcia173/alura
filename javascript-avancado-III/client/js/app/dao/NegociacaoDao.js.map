{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","console","log","onerror","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAGKC,a;AAET,uCAAYC,UAAZ,EAAuB;AAAA;;AACnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBC,wCAAQC,GAAR,CAAY,kCAAZ;AACAT;AACH,6BAHD;;AAKAE,oCAAQQ,OAAR,GAAkB,UAACH,CAAD,EAAO;AACrBC,wCAAQC,GAAR,CAAYF,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAO,6BAAP;AACH,6BAHD;AAIH,yBAfM,CAAP;AAgBH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,UADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,UAACC,CAAD,EAAO;AACtB,oCAAIS,QAAQT,EAAEI,MAAF,CAASM,MAArB;AACA,oCAAID,KAAJ,EAAW;AACP,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,0CAAMQ,QAAN;AACH,iCAJD,MAIO;AACHxB,4CAAQe,WAAR;AACH;AACJ,6BATD;;AAWAF,mCAAOH,OAAP,GAAiB,UAACH,CAAD,EAAO;AACpBC,wCAAQC,GAAR,CAAYF,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAvBM,CAAP;AAwBH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT4B,KAHS,EAAd;;AAKAvB,oCAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBP,wCAAQ,oCAAR;AACH,6BAFD;;AAIAE,oCAAQQ,OAAR,GAAkB,UAACH,CAAD,EAAO;AACrBC,wCAAQC,GAAR,CAAYF,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAO,8BAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\r\n\r\n// Classe responsavel pelo acesso dados base para negociacao\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection){\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n    \r\n            request.onsuccess = (e) => {\r\n                console.log('Negociacao incluida com sucesso!');\r\n                resolve();\r\n            };\r\n    \r\n            request.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject('Erro ao incluir negociacao!');\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readonly')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n            \r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = (e) => {\r\n                let atual = e.target.result;\r\n                if (atual) {\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject('Nao foi possivel listar as negociacoes!');\r\n            };\r\n        });\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = (e) => {\r\n                resolve('Negociacoes removidas com sucesso!');\r\n            };\r\n\r\n            request.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject('Erro ao remover negociacoes!');\r\n            };\r\n        });\r\n    }\r\n\r\n}"]}