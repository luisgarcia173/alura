{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","console","log","onerror","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;AAAA;IACMA,a;AAEF,2BAAYC,UAAZ,EAAuB;AAAA;;AACnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBC,4BAAQC,GAAR,CAAY,kCAAZ;AACAT;AACH,iBAHD;;AAKAE,wBAAQQ,OAAR,GAAkB,UAACH,CAAD,EAAO;AACrBC,4BAAQC,GAAR,CAAYF,EAAEI,MAAF,CAASC,KAArB;AACAX,2BAAO,6BAAP;AACH,iBAHD;AAIH,aAfM,CAAP;AAgBH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,UADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,UAACC,CAAD,EAAO;AACtB,wBAAIS,QAAQT,EAAEI,MAAF,CAASM,MAArB;AACA,wBAAID,KAAJ,EAAW;AACP,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAR,8BAAMS,QAAN;AACH,qBAJD,MAIO;AACHzB,gCAAQe,WAAR;AACH;AACJ,iBATD;;AAWAF,uBAAOH,OAAP,GAAiB,UAACH,CAAD,EAAO;AACpBC,4BAAQC,GAAR,CAAYF,EAAEI,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAIH,aAvBM,CAAP;AAwBH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;;AAKAxB,wBAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBP,4BAAQ,oCAAR;AACH,iBAFD;;AAIAE,wBAAQQ,OAAR,GAAkB,UAACH,CAAD,EAAO;AACrBC,4BAAQC,GAAR,CAAYF,EAAEI,MAAF,CAASC,KAArB;AACAX,2BAAO,8BAAP;AACH,iBAHD;AAIH,aAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["// Classe responsavel pelo acesso dados base para negociacao\r\nclass NegociacaoDao {\r\n\r\n    constructor(connection){\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n    \r\n            request.onsuccess = (e) => {\r\n                console.log('Negociacao incluida com sucesso!');\r\n                resolve();\r\n            };\r\n    \r\n            request.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject('Erro ao incluir negociacao!');\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readonly')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n            \r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = (e) => {\r\n                let atual = e.target.result;\r\n                if (atual) {\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject('Nao foi possivel listar as negociacoes!');\r\n            };\r\n        });\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = (e) => {\r\n                resolve('Negociacoes removidas com sucesso!');\r\n            };\r\n\r\n            request.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject('Erro ao remover negociacoes!');\r\n            };\r\n        });\r\n    }\r\n\r\n}"]}