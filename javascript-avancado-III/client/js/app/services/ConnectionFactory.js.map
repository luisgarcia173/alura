{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","dbName","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","e","_createStores","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACMA,kB,GAAS,CAAC,aAAD,C;AACTC,mB,GAAU,C;AACVC,kB,GAAS,Y;AACXC,sB,GAAa,I;AACbC,iB,GAAQ,I;;yCAGCC,iB;AAET,6CAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACH;;;;oDAEsB;AACnB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC;AACA,gCAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAAlB;;AAEA;AACAS,wCAAYI,eAAZ,GAA8B,UAACC,CAAD,EAAO;AACjC;AACAV,kDAAkBW,aAAlB,CAAgCD,EAAEE,MAAF,CAASC,MAAzC;AACH,6BAHD;;AAKA;AACAR,wCAAYS,SAAZ,GAAwB,UAACJ,CAAD,EAAO;AAC3B,oCAAG,CAACZ,UAAJ,EAAe;AACXA,iDAAaY,EAAEE,MAAF,CAASC,MAAtB;;AAEA;AACA;AACA;AACAd,4CAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACAA,+CAAWC,KAAX,GAAmB,YAAW;AAC1B,8CAAM,IAAIE,KAAJ,CAAU,gDAAV,CAAN;AACH,qCAFD;AAGH;AACDE,wCAAQL,UAAR;AACH,6BAbD;;AAeA;AACAO,wCAAYW,OAAZ,GAAsB,UAACN,CAAD,EAAO;AACzBO,wCAAQC,GAAR,CAAYR,EAAEE,MAAF,CAASO,KAArB;AACAf,uCAAOM,EAAEE,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACH,6BAHD;AAKH,yBAjCM,CAAP;AAkCH;;;sDAEwB;AACrB,4BAAGtB,UAAH,EAAc;AACVC;AACAD,yCAAa,IAAb;AACH;AACJ;;;kDAEoBA,U,EAAY;AAC7BH,+BAAO0B,OAAP,CAAe,iBAAS;AACpB;AACA,gCAAIvB,WAAWwB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAJ,EAAiD;AAC7C1B,2CAAW2B,iBAAX,CAA6BD,KAA7B;AACH;AACD;AACA1B,uCAAW4B,iBAAX,CAA6BF,KAA7B,EAAoC,EAACG,eAAe,IAAhB,EAApC;AACH,yBAPD;AAQH","file":"ConnectionFactory.js","sourcesContent":["// Scope variables\r\nconst stores = ['negociacoes'];\r\nconst version = 4;\r\nconst dbName = 'aluraframe';\r\nlet connection = null;\r\nlet close = null;\r\n\r\n// Classe responsavel por controlar conexao banco\r\nexport class ConnectionFactory {\r\n\r\n    constructor() {\r\n        throw new Error('Não é possível criar instâncias de ConnectionFactory');\r\n    }\r\n\r\n    static getConnection() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            // Cria Database (nome, versao)\r\n            let openRequest = window.indexedDB.open(dbName, version);\r\n\r\n            // Quando criado ou alterado (baseado na versao)\r\n            openRequest.onupgradeneeded = (e) => {\r\n                // Crio as stores\r\n                ConnectionFactory._createStores(e.target.result);\r\n            };\r\n\r\n            // Quando iniciado o DB\r\n            openRequest.onsuccess = (e) => {\r\n                if(!connection){\r\n                    connection = e.target.result;\r\n\r\n                    // Monkey Patch: pattern que força a modificação de um comportamento padrao API, neste caso está \r\n                    // mandando uma exception quando o usuario tenta fechar conexao pelo objeto connection e nao pela\r\n                    // Factory\r\n                    close = connection.close.bind(connection);\r\n                    connection.close = function() {\r\n                        throw new Error(\"Não é possível encerrar a conexão diretamente!\");\r\n                    };\r\n                }\r\n                resolve(connection);\r\n            };\r\n\r\n            // Em caso de erro\r\n            openRequest.onerror = (e) => {\r\n                console.log(e.target.error);\r\n                reject(e.target.error.name);\r\n            };\r\n\r\n        });\r\n    }\r\n\r\n    static closeConnection() {\r\n        if(connection){\r\n            close();\r\n            connection = null;\r\n        }\r\n    }\r\n\r\n    static _createStores(connection) {\r\n        stores.forEach(store => {\r\n            // Verifica se tabela existe e remove\r\n            if (connection.objectStoreNames.contains(store)) {\r\n                connection.deleteObjectStore(store)\r\n            }\r\n            // Cria tabela com auto incremento\r\n            connection.createObjectStore(store, {autoIncrement: true});\r\n        });\r\n    }\r\n\r\n}\r\n"]}